---
- hosts: loadbalancer
  become: true
  tasks:
     - name: verify nginx service
       command: service nginx status

     - name: verify nginx port
       wait_for: port=80 timeout=1

- hosts: webserver
  become: true
  tasks:
     - name: verify apache2 service
       command: service apache2 status
     
     - name: verify apache2 port
       wait_for: port=80 timeout=1

- hosts: database
  become: true
  tasks:
     - name: verify mysql service
       command: service mysql status
     - name: verify mysql port
       wait_for: host={{ ansible_eth0.ipv4.address }} port=3306 timeout=1

- hosts: control
  become: true
  tasks:
     - name: verify end-2-end response
       uri: url="http://{{item}}" return_content=yes
       with_inventory_hostnames: loadbalancer
       register: lb_index

     - fail: msg="index failed to return content"
       when: "'Hello, from sunny' not in item.content"
       with_items: "{{lb_index.results}}" 

     - name: verify db response
       uri: url="http://{{item}}/db" return_content=yes
       with_inventory_hostnames: loadbalancer
       register: lb_db

     - fail: msg="index failed to return content"
       when: "'Database Connected' not in item.content"
       with_items: "{{lb_db.results}}"



- hosts: loadbalancer
  become: true
  tasks:
     - name: verify backend response
       uri: url=http://{{item}} return_content=yes
       with_inventory_hostnames: webserver
       register: app_index

     - fail: msg="index failed to return content"
       when: "'Hello, from sunny {{item.item}}!' not in item.content" 
       with_items: "{{app_index.results}}"

     - name: verify db response
       uri: url="http://{{item}}/db" return_content=yes
       with_inventory_hostnames: webserver
       register: app_db

     - fail: msg="index failed to return content"
       when: "'Database Connected from {{item.item}}!' not in item.content"
       with_items: "{{app_db.results}}"

 